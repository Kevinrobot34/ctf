from Crypto.Hash import SHA256


# return (g, x, y) which satisfies ax + by = g and g = GCD(a,b)
def ext_gcd(a: int, b: int) -> tuple[int, int, int]:
    if b:
        g, y, x = ext_gcd(b, a % b)
        y -= (a // b) * x
        return g, x, y
    return a, 1, 0


# Starter 1
print('Starter 1')
print(pow(101, 17, 22663))

# Starter 2
print('Starter 2')
e = 65537
p = 17
q = 23
n = p * q
m = 12
c = pow(m, e, n)
print(c)

# Starter 3
print('Starter 3')
p = 857504083339712752489993810777
q = 1029224947942998075080348647219
phi = (p - 1) * (q - 1)
print(phi)

# Starter 4
print('Starter 4')
p = 857504083339712752489993810777
q = 1029224947942998075080348647219
n = p * q
phi = (p - 1) * (q - 1)
_, d, _ = ext_gcd(e, phi)
print(d)

# Starter 5
print('Starter 5')
p = 857504083339712752489993810777
q = 1029224947942998075080348647219
c = 77578995801157823671636298847186723593814843845525223303932
n = 882564595536224140639625987659416029426239230804614613279163
phi = (p - 1) * (q - 1)
_, d, _ = ext_gcd(e, phi)
m = pow(c, d, n)
print(m)

# Starter 6
print('Starter 6')
# private.key
N = 15216583654836731327639981224133918855895948374072384050848479908982286890731769486609085918857664046075375253168955058743185664390273058074450390236774324903305663479046566232967297765731625328029814055635316002591227570271271445226094919864475407884459980489638001092788574811554149774028950310695112688723853763743238753349782508121985338746755237819373178699343135091783992299561827389745132880022259873387524273298850340648779897909381979714026837172003953221052431217940632552930880000919436507245150726543040714721553361063311954285289857582079880295199632757829525723874753306371990452491305564061051059885803
d = 11175901210643014262548222473449533091378848269490518850474399681690547281665059317155831692300453197335735728459259392366823302405685389586883670043744683993709123180805154631088513521456979317628012721881537154107239389466063136007337120599915456659758559300673444689263854921332185562706707573660658164991098457874495054854491474065039621922972671588299315846306069845169959451250821044417886630346229021305410340100401530146135418806544340908355106582089082980533651095594192031411679866134256418292249592135441145384466261279428795408721990564658703903787956958168449841491667690491585550160457893350536334242689
h = SHA256.new()
f = 'crypto{Immut4ble_m3ssag1ng}'
h.update(b'crypto{Immut4ble_m3ssag1ng}')
fh = int(h.hexdigest(), 16)
print(hex(pow(fh, d, N)))
