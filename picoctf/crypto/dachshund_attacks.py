import math

from Crypto.Util.number import long_to_bytes


def f(a, b):
    '''
    calc continued fraction of a/b
    ai/bi is 「主近似分数」 of a/b
    '''
    print(a / b)
    q, r = a // b, a % b
    a0, a1 = 1, q
    b0, b1 = 0, 1
    print(q)
    while r:
        a, b = b, r
        q, r = a // b, a % b
        print(q)
        a0, a1 = a1, a0 + q * a1
        b0, b1 = b1, b0 + q * b1
        # print(b0, b1, b0 / b1)
        print(a1, b1, a1 / b1)
        yield a1, b1


e = 45382788032956253765242434678232743197541986760860985489250100171372515560527837243920199644852297138695188708453671029825163333636199604147637082211101796597748336918480116200007794792590739858712124437560136705438747090624801439109013681385560485881272801862047748406944583423126285754613953684905423152573
n = 54286090944676127002686592446787504327362478952140867282224993874571751753819427545944416794001994141035352114877916166611770191844452898170704881199560975628594545431159214387428484915499326474456395926393570183177008737843215941695143557331284020734098934141865254114330504437538075531249364632150888388587
c = 14880028468343215059700736793053932433698051725791404492712394592338763374235972637746618080503665592949004998806027986063897794610109154944703059813052575193206237893417696649512888124332953966155462138240760854018095854688241409947266047729954521553912147652158847087108800942270767609774596302502337091656

for ki, di in f(e, n):
    if ki == 0 or (e * di - 1) % ki != 0:
        continue

    phi = (e * di - 1) // ki
    s = n - phi + 1
    # check if the equation x^2 - s*x + n = 0
    # has integer roots
    discr = s * s - 4 * n
    if discr < 0:
        continue
    if math.isqrt(discr)**2 == discr:
        print('hacked!!!', di)
        d = di
        break

m = pow(c, di, n)
print(long_to_bytes(m))
