import math

from Crypto.Util.number import long_to_bytes


def f(a, b):
    '''
    calc continued fraction of a/b
    ai/bi is 「主近似分数」 of a/b
    '''
    print(a / b)
    q, r = a // b, a % b
    a0, a1 = 1, q
    b0, b1 = 0, 1
    print(q)
    while r:
        a, b = b, r
        q, r = a // b, a % b
        print(q)
        a0, a1 = a1, a0 + q * a1
        b0, b1 = b1, b0 + q * b1
        # print(b0, b1, b0 / b1)
        print(a1, b1, a1 / b1)
        yield a1, b1


c = 23415361508156204617045214662749861908784997612019019746153094302262254694785970499339914414161163105543303498912924780761254184917556146727448548890249785890272454028542245397967303338672056353290524367428412973097551746877758574181345243365431145641812481860919105582892111655745400242763238440153604387801
n = 110794545743329448286871058053772914612510113336583740838327802460805530227887014209438431714949043256289560981579243844760822534504480434491732028373622267622632115907552845993671429246641498560010084728104114874337276541027630170240025709551218259130932163103235066532923630011030711591049449630759434540879
e = 11549938760065715408027573258211034265112365447236524671673337907017766796114013169337677426133815455803138389400634663585546173241598033606169235971261839683104164120111386007176707483203766100130522950456028430082913348178919251617007407784416035694167827070449126233757052251312623715170493299431101268097

for ki, di in f(e, n):
    if ki == 0 or (e * di - 1) % ki != 0:
        continue

    phi = (e * di - 1) // ki
    s = n - phi + 1
    # check if the equation x^2 - s*x + n = 0
    # has integer roots
    discr = s * s - 4 * n
    if discr < 0:
        continue
    if math.isqrt(discr)**2 == discr:
        print('hacked!!!', di)
        d = di
        break

m = pow(c, di, n)
print(long_to_bytes(m))
